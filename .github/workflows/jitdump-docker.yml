name: JIT Disasm (Docker)

on:
  workflow_dispatch:
    inputs:
      method:
        description: 'Fully qualified method name (e.g. Namespace.Type::Method)'
        required: true
        type: string

jobs:
  jitdump:
    name: JIT Dump via Docker (${{ matrix.arch }})
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        arch: [x64, arm64]
        include:
          - arch: x64
            runner: ubuntu-latest
            platform: linux/amd64
          - arch: arm64
            runner: ubuntu-22.04-arm64
            platform: linux/arm64

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build jitutils Docker image with caching
      uses: docker/build-push-action@v5
      with:
        context: .
        file: Dockerfile.jitutils
        platforms: ${{ matrix.platform }}
        tags: jitutils:latest
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run jit-dasm on selected method
      run: |
        docker run --rm -v "$PWD:/app" -w /app jitutils:latest \
          bash -c "
            dotnet publish -c Release -o out &&
            mkdir -p dasm &&
            jit-dasm --crossgen --output dasm \
              --method '${{ github.event.inputs.method }}' \
              ./out/*.dll
          "

    - name: Output disassembly to console
      run: |
        echo '--- Disassembly Output ---'
        cat dasm/${{ github.event.inputs.method }}.asm || echo 'Disassembly file not found.'

    - name: Upload JIT disasm
      uses: actions/upload-artifact@v4
      with:
        name: jit-dump-${{ matrix.arch }}
        path: dasm
